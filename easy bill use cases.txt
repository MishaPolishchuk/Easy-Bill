Technologies:
 - c#, js, ts
 - .NET;
 - ASP.NET Core WepApi;
 - Asp.Net Core Identity, Bearer tokens, JWT
 - Ionic+Capacitor;
 - Angular;
 - MSSQL;
 - EF Core;
 - OCR Azure AI Vision ( https://azure.microsoft.com/en-us/products/ai-services/ai-vision )

Architecture:
 - Clean (Onion) Arch.;
 - Repo pattern;
 - CQRS;

	    === Mobile app (functionality) ===
Use cases: 
 ++ User registration, authorization, authentication; (token, cash, ...)
 ++ Base functionality
	* Add bill ( button ):
	  * convert cropped taken/downloaded photo to user-friendly tabled data:
	    - position name;
	    - ordered position count:
	    - position price;
	* Add people ( button ):
	    - area with input count of people for whom to divide the bill
	    - Create people's names
	    - confirmation;
		After adding & naming people, each position in the bill list will have an icon that represents a person;
	  	After tapping on this icon it means, that a person has ordered this (one) position;
	* Position settings:
	* When tap on position -> position settings window opens:
	    - position name | ordered qty | price per one item | price per order position;
	    - the possibility of adding/removing the person who ordered the item;
	    - possibility to input the count of the items per one person;
	    - possibility to drag person to person (divide 1 item for N people);
	* Add discount ( button );
	    - should be applied to all member's payments equally;
	* Add tips ( button ) as 2 possible forms:
	    - form_1: based on result sum. % from the sum is divided among all people equally.
	    - form_2: each person is notified of how much he/she will leave (tip amount will be added to person sum); 	
	* Show the result as a convenient table with expanded rows:
	  	(Person name, order name, order qty, order price, tips amount, total price );
	* Generate QR code containing data about common bills, each person`s payment, tips, discount;
	* Share order data & payment via other messengers;
 ++ View history of bills (date, place, sum);

	    === Web page ===
 ++ QR
    	* Scanned QR redirects the person to the web page with order data & payment; 	
	* QR data:
	   - Person name,
	   - order position name,
	   - order position  qty,
	   - order position  price,
	   - tips amount,
	   - total price,
	   - notification about the possibility of returning the person's sum (his\her part of the general bill sum)
	     to those who generated QR in case of his\her no cash payment;
	   - credential to pay (card number);
	     This notification also contains a button to return funds ( redirects to a provider via which payment is made (Privat24/Mono/Oshchad) );
++ Sharing results among all people via other messengers:
  - Person name,
	   - order position name,
	   - order position  qty,
	   - order position  price,
	   - tips amount,
	   - total price,
	   - notification about the possibility of returning the person's sum (his\her part of the general bill sum)
	     to those who generated QR in case of his\her no cash payment;
	   - credential to pay (card number);
	     This shared message also contains a link to return funds ( redirects to a provider via which payment is made (Privat24/Mono/Oshchad) );

 	   === Data security ===
	* Protect sensitive data (card number), redirection links to web banking (avoid fishing);
	
	
